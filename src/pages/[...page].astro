---
import { SITE_TITLE, SITE_DESCRIPTION } from '../config'
import type { GetStaticPathsOptions, Page } from 'astro'
import type { CollectionEntry } from 'astro:content'
import { getPosts } from '@content/posts'
import BaseHead from '@components/BaseHead.astro'
import Header from '@components/Header.astro'
import Main from '@components/Main.astro'
import Post from '@components/Post.astro'
import Footer from '@components/Footer.astro'
import PostList from '@components/PostList.astro'
import Nav from '@components/Nav.astro'
import FeaturedPosts from '@components/FeaturedPosts.astro'

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts = await getPosts()
  const pages = paginate(posts, { pageSize: 2 })
  return pages
}

export interface Props {
  page: Page<CollectionEntry<'blog'>>
}

const { page } = Astro.props
const isFirstPage = page.currentPage === 1
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header front={isFirstPage} />
    <Main>
      {isFirstPage && <FeaturedPosts />}
      {page.data.map((post) => <Post post={post} isListingPage />)}
    </Main>
    <Nav>
      <div class="pages">
        <a
          href={page.url.prev || '/'}
          class:list={{ disabled: isFirstPage }}
          aria-disabled={isFirstPage}>&lsaquo; Previous Page</a
        >
        {
          page.url.next != null && (
            <a href={page.url.next}>Next Page &rsaquo;</a>
          )
        }
      </div>
      {isFirstPage && <PostList />}
    </Nav>
    <Footer />
    <style lang="less">
      .pages {
        display: flex;
        justify-content: space-between;
        margin-bottom: 2rem;
      }

      a.disabled,
      a:visited.disabled {
        pointer-events: none;
        color: gray;
        text-decoration: none;
      }
    </style>
  </body>
</html>

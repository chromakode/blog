---
import { SITE_TITLE, SITE_DESCRIPTION } from '../config'
import BaseHead from '../components/BaseHead.astro'
import Header from '../components/Header.astro'
import Main from '../components/Main.astro'
import Post, { getPosts } from '../components/Post.astro'
import Footer from '../components/Footer.astro'
import type { MarkdownInstance, Page } from 'astro'

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const posts = await getPosts()
  const pages = paginate(posts, { pageSize: 3 })
  return pages
}

export interface Props {
  page: Page<MarkdownInstance<any>>
}

const posts = await getPosts()
const { page } = Astro.props
const isFirstPage = page.currentPage === 1
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
  </head>
  <body>
    <Header front={isFirstPage} />
    <Main
      >{
        page.data.map(({ url, frontmatter: { pubDate }, compiledContent }) => (
          <Post
            url={url!}
            pubDate={pubDate}
            isListingPage
            set:html={compiledContent()}
          />
        ))
      }
    </Main>
    <nav>
      <div class="pages">
        <a
          href={page.url.prev || '/'}
          class:list={{ disabled: isFirstPage }}
          aria-disabled={isFirstPage}>&lsaquo; Previous Page</a
        >
        {
          page.url.next != null && (
            <a href={page.url.next}>Next Page &rsaquo;</a>
          )
        }
      </div>
      {
        isFirstPage && (
          <div class="index gray">
            <ul>
              {posts.map((post) => (
                <li>
                  <a href={post.url} title={post.frontmatter.title}>
                    {post.frontmatter.title}
                  </a>
                  <time>{post.frontmatter.pubDate}</time>
                </li>
              ))}
            </ul>
          </div>
        )
      }
    </nav>
    <Footer />
    <style lang="less">
      nav {
        width: 100%;
        max-width: var(--content-max-width);
        margin: 0 auto;
        padding: 1rem;
        box-sizing: border-box;

        .pages {
          display: flex;
          justify-content: space-between;
        }

        .index {
          margin-top: 3rem;
          line-height: 200%;

          a {
            overflow: hidden;
            text-overflow: ellipsis;
            flex-shrink: 1;
          }

          time {
            color: #777;
            margin-left: 1rem;
          }

          ul {
            padding: 0;
          }

          li {
            display: flex;
            justify-content: space-between;
            list-style-type: none;
            white-space: nowrap;
          }
        }
      }

      a.disabled,
      a:visited.disabled {
        pointer-events: none;
        color: gray;
        text-decoration: none;
      }
    </style>
  </body>
</html>

---
export interface Props {
  sticky?: boolean
  reversed?: boolean
}

const { sticky, reversed } = Astro.props
---

<div class:list={['color-bars', { sticky, reversed }]}></div>

<style lang="less">
  .color-bars {
    display: flex;
    width: 100%;
    height: var(--color-bar-height);
    transition: opacity 0.5s ease;
    z-index: 20;

    &.reversed {
      transform: scaleX(-1);
    }

    &.sticky {
      position: sticky;
      top: -1vh;
    }

    :global(.bar) {
      flex: 1;
      height: 100%;
    }
  }
</style>

<script>
  function randomizeColors() {
    const base = Math.round(Math.random() * 360)
    const mul = 10 + Math.round(Math.random() * 30)

    for (const el of document.getElementsByClassName('color-bars')) {
      for (var i = 0; i < 6; i++) {
        var bar = document.createElement('div')
        bar.className = 'bar'
        bar.style.backgroundColor =
          'hsl(' + ((base + i * mul) % 360) + ', 70%, 60%)'
        el.appendChild(bar)
      }
    }
  }

  document.addEventListener('astro:after-swap', randomizeColors)
  randomizeColors()
</script>
